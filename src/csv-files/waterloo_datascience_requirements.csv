"","Course Code","Course Name","Category","Required from Category","Course Description","Prerequisite","Antirequisite","Corequisite","Note","Other Information","Lecture","Lab","Test Slot","Tutorial","Project","Reading","Studio","Credit Amount"
"1","CS 136","Elementary Algorithm Design and Data Abstraction","Category 1","One","This course builds on the techniques and patterns learned in CS 135 while making the transition to use an imperative language. It introduces the design and analysis of algorithms, the management of information, and the programming mechanisms and methodologies required in implementations. Topics discussed include iterative and recursive sorting algorithms; lists, stacks, queues, trees, and their application; abstract data types and their implementations.","Prereq: At least 90% in CS 115 or at least 70% in CS 116 or at least 60% in CS 135 or CS 145.","Antireq: CS 137, 138, 146, PHYS 239","Coreq: CS 136L.","[Note: See Note 2 above. Offered: F,W,S]","",TRUE,TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,"0.50"
"2","CS 136L","Tools and Techniques for Software Development","Category 3","All","This course introduces students to tools and techniques useful in the software development lifecycle. Students learn to navigate and leverage commands and utilities in the Linux Command Line Shell. Students gain experience in version control software, writing scripts to automate tasks, and creating effective test cases to identify bugs. Tracing and debugging strategies are discussed. Students also gain experience in using built-in support for version control, testing, debugging, build automation, etc. in integrated development environments (IDEs).","Prereq: At least 90% in CS 115 or at least 70% in CS 116 or at least 60% in CS 135 or CS 145.","","Coreq: CS 136 or CS 146","[Note: Course will be graded on a CR/NCR basis.]","",FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,"0.25"
"3","CS 146","Elementary Algorithm Design and Data Abstraction (Advanced Level)","Category 1","One","CS 146 is an advanced-level version of CS 136.","Prereq: CS 145 with a grade of at least 75%.","Antireq: CS 116, 136, 137, 138.","Coreq: CS 136L.","[Note: See Note 2 above. This course may be substituted for CS 136 in any degree plan or for prerequisite purposes. Students who receive a good grade in CS 135 may contact the instructor of CS 146 to seek admission without the formal prerequisites. Offered: W]","",TRUE,TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,"0.50"
"4","CS 240","Data Structures and Data Management","Category 3","All","Introduction to widely used and effective methods of data organization, focusing on data structures, their algorithms, and the performance of these algorithms. Specific topics include priority queues, sorting, dictionaries, data structures for text processing.","Prereq: (CS 245 or SE 212), (one of CS 241, 246, 247), (one of STAT 206, 230, 240); Computer Science and BMath (Data Science) students only.","Antireq: BME 122, CS 234, ECE 250, MTE 140, SYDE 223","","[Note: Enrolment is restricted; see Note 1 above. Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W,S]","",TRUE,TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,"0.50"
"5","CS 241","Foundations of Sequential Programs","Category 3","All","The relationship between high-level languages and the computer architecture that underlies their implementation, including basic machine architecture, assemblers, specification and translation of programming languages, linkers and loaders, block-structured languages, parameter passing mechanisms, and comparison of programming languages.","Prereq: (CS 138 or 246) or (a grade of 85% or higher in one of CS 136 or 146); Computer Science and BMath (Data Science) students only.","Antireq: CS 230, ECE 351","","[Note: Enrolment is restricted; see Note 1 above. Lab is not scheduled and students are expected to find time in open hours to complete their work. CS 251 is a recommended corequisite. Offered: F,W,S]","",TRUE,TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,"0.50"
"6","CS 245","Logic and Computation","Category 3","All","Logic as a tool for representation, reasoning, and computation. Propositional and predicate logic. Formalizing the notions of correct and incorrect reasoning, defining what is computable, and exploring the limits of computation. Godel's Incompleteness Theorem. Applications of logic to computer science.","Prereq: (One of CS 136, 138, 146), MATH 135; Honours Mathematics students only.","Antireq: PMATH 330, ECE 208, SE 212","","","",TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,FALSE,"0.50"
"7","CS 246","Object-Oriented Software Development","Category 3","All","Introduction to object-oriented programming and to tools and techniques for software development. Designing, coding, debugging, testing, and documenting medium-sized programs: reading specifications and designing software to implement them; selecting appropriate data structures and control structures; writing reusable code; reusing existing code; basic performance issues; debuggers; test suites.","Prereq: CS 146 or a grade of 60% or higher in CS 136 or 138; Honours Mathematics students only.","Antireq: CS 247, MSCI 342, SYDE 322","","[Note: Enrolment is restricted; see Note 1 above. Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W,S]","",TRUE,TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,"0.50"
"8","CS 251","Computer Organization and Design","Category 3","All","Overview of computer organization and performance. Basics of digital logic design. Combinational and sequential elements. Data representation and manipulation. Basics of processor design. Pipelining. Memory hierarchies. Multiprocessors.","Prereq: One of CS 136, 138, 146; Computer Science and BMath (Data Science) students only.","Antireq: BME 292/393, ECE 222, ME 262, MTE 262, SYDE 192","","[Note: Students enrolled in Digital Hardware Specialization should enrol in ECE 222. Enrolment is restricted; see Note 1 above. Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W,S]","",TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE,"0.50"
"9","CS 341","Algorithms","Category 3","All","The study of efficient algorithms and effective algorithm design techniques. Program design with emphasis on pragmatic and mathematical aspects of program efficiency. Topics include divide and conquer algorithms, recurrences, greedy algorithms, dynamic programming, graph search and backtrack, problems without algorithms, NP-completeness and its implications.","Prereq: CS 240 and (MATH 239 or 249); Computer Science and BMath (Data Science) students only.","Antireq: CS 231, ECE 406","","[Note: Enrolment is restricted; see Note 1 above. Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W,S]","",TRUE,TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,"0.50"
"10","CS 348","Introduction to Database Management","Category 3","All","The main objective of this course is to introduce students to fundamentals of database technology by studying databases from three viewpoints: those of the database user, the database designer, and the database administrator. It teaches the use of a database management system (DBMS) by treating it as a black box, focusing only on its functionality and its interfaces. Topics include introduction to database systems, relational database systems, database design methodology, SQL and interfaces, database application development, concept of transactions, ODBC, JDBC, database tuning, database administration, and current topics (distributed databases, data warehouses, data mining).","Prereq: Computer Science and BMath (Data Science) students only.","Antireq: CS 338, ECE 356, 456, MSCI 346","Coreq: CS 240.","[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W,S]","",TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE,"0.50"
"11","CS 431","Data-Intensive Distributed Analytics","Category 4","One","Introduces non-CS major students to infrastructure for data-intensive analytics, with a focus on abstractions, frameworks, and algorithms that allow developers to distribute computation across many machines. Topics include core concepts (partitioning, replication, locality, consistency), computational models (MapReduce, dataflows, stream processing, bulk-synchronous parallel), and applications. [Offered: F,W]","Prereq: (CS 231 or 234 or 341) and (CS 251 or 330); Not open to Computer Science students.","Antireq: CS 451","","","",TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"0.50"
"12","CS 451","Data-Intensive Distributed Computing","Category 4","One","Introduces students to infrastructure for data-intensive computing, with a focus on abstractions, frameworks, and algorithms that allow developers to distribute computations across many machines. ï¿½Topics include core concepts (partitioning, replication, locality, consistency), computational models (MapReduce, dataflows, stream processing, bulk-synchronous parallel), and applications. [Offered: F,W]","Prereq: CS 341, 348 and (CS 350 or SE 350); Computer Science and BMath (Data Science) students only","","","","",TRUE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,"0.50"
"13","CS 480","Introduction to Machine Learning","Category 5","One","Introduction to modeling and algorithmic techniques for machines to learn concepts from data. Generalization: underfitting, overfitting, cross-validation. Tasks: classification, regression, clustering. Optimization-based learning: loss minimization. regularization. Statistical learning: maximum likelihood, Bayesian learning. Algorithms: nearest neighbour, (generalized) linear regression, mixtures of Gaussians, Gaussian processes, kernel methods, support vector machines, deep learning, sequence learning, ensemble techniques. Large scale learning: distributed learning and stream learning. Applications: Natural language processing, computer vision, data mining, human computer interaction, information retrieval.","Prereq: CS 341 and (STAT 206 or 231 or 241); Computer Science and BMath (Data Science) students only.","","","[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W,S]","",TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE,"0.50"
"14","CS 480","Introduction to Machine Learning","Category 6","Two","Introduction to modeling and algorithmic techniques for machines to learn concepts from data. Generalization: underfitting, overfitting, cross-validation. Tasks: classification, regression, clustering. Optimization-based learning: loss minimization. regularization. Statistical learning: maximum likelihood, Bayesian learning. Algorithms: nearest neighbour, (generalized) linear regression, mixtures of Gaussians, Gaussian processes, kernel methods, support vector machines, deep learning, sequence learning, ensemble techniques. Large scale learning: distributed learning and stream learning. Applications: Natural language processing, computer vision, data mining, human computer interaction, information retrieval.","Prereq: CS 341 and (STAT 206 or 231 or 241); Computer Science and BMath (Data Science) students only.","","","[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W,S]","",TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE,"0.50"
"15","CS 485","Statistical and Computational Foundations of Machine Learning","Category 5","One","Extracting meaningful patterns from random samples of large data sets. Statistical analysis of the resulting problems. Common algorithmic paradigms for such tasks. Central concepts: VC-dimension, margins of a classifier, sparsity and description length, other types of regularization. Performance guarantees: generalization bounds, data dependent error bounds, and computational complexity of learning algorithms. Common paradigms: neural networks, kernel methods and support-vector machines, boosting, nearest neighbor classifiers. Applications to data mining.","Prereq: CS 341 and (STAT 206 or 230 or 240); Computer Science and BMath (Data Science) students only","","","","",TRUE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,"0.50"
"16","CS 485","Statistical and Computational Foundations of Machine Learning","Category 6","Two","Extracting meaningful patterns from random samples of large data sets. Statistical analysis of the resulting problems. Common algorithmic paradigms for such tasks. Central concepts: VC-dimension, margins of a classifier, sparsity and description length, other types of regularization. Performance guarantees: generalization bounds, data dependent error bounds, and computational complexity of learning algorithms. Common paradigms: neural networks, kernel methods and support-vector machines, boosting, nearest neighbor classifiers. Applications to data mining.","Prereq: CS 341 and (STAT 206 or 230 or 240); Computer Science and BMath (Data Science) students only","","","","",TRUE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,"0.50"
"17","CS 486","Introduction to Artificial Intelligence","Category 5","One","Goals and methods of artificial intelligence. Methods of general problem solving. Knowledge representation and reasoning. Planning. Reasoning about uncertainty. Machine learning. Multi-agent systems. Natural language processing.","Prereq: CS 341; Computer Science and BMath (Data Science) students only.","","Coreq: STAT 206 or 231 or 241.","[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W,S]","",TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE,"0.50"
"18","CS 486","Introduction to Artificial Intelligence","Category 6","Two","Goals and methods of artificial intelligence. Methods of general problem solving. Knowledge representation and reasoning. Planning. Reasoning about uncertainty. Machine learning. Multi-agent systems. Natural language processing.","Prereq: CS 341; Computer Science and BMath (Data Science) students only.","","Coreq: STAT 206 or 231 or 241.","[Note: Lab is not scheduled and students are expected to find time in open hours to complete their work. Offered: F,W,S]","",TRUE,TRUE,TRUE,FALSE,FALSE,FALSE,FALSE,"0.50"
"19","MATH 239","Introduction to Combinatorics","Category 2","One","Introduction to graph theory: colourings, matchings, connectivity, planarity. Introduction to combinatorial analysis: generating series, recurrence relations, binary strings, plane trees. [Offered: F,W,S]","Prereq: ((MATH 106 with a grade of at least 70% or MATH 136 or 146) and (MATH 135 with a grade of at least 60% or MATH 145)) or level at least 2A Software Engineering; Honours Mathematics students only.","Antireq: CO 220, MATH 229, 249","","","Also offered Online",TRUE,FALSE,TRUE,TRUE,FALSE,FALSE,FALSE,"0.50"
"20","MATH 249","Introduction to Combinatorics (Advanced Level)","Category 2","One","MATH 249 is an advanced-level version of MATH 239. [Offered: F,W]","Prereq: (MATH 135 with minimum grade of 80% or MATH 145) and (MATH 136 or 146); Honours Mathematics students only.","Antireq: CO 220, MATH 229, 239","","","",TRUE,FALSE,TRUE,FALSE,FALSE,FALSE,FALSE,"0.50"
"21","STAT 341","Computational Statistics and Data Analysis","Category 3","All","A computationally focused approach to statistical reasoning in the context of real data. Functional programming in R and algorithms will be used to define interesting attributes of finite populations and their sampling characteristics. Computational approaches to inductive inference and the assessment of predictive accuracy. [Offered: F,W]","Prereq: MATH 237 or 247, (STAT 230 with a grade of at least 60% or STAT 240), STAT 231 or 241","","","","",TRUE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,"0.50"
"22","STAT 431","Generalized Linear Models and their Applications","Category 6","Two","Review of the normal linear model and maximum likelihood estimation; regression models for binomial, Poisson and multinomial data; generalized linear models; and other topics in regression modelling. [Offered: F,W,S]","Prereq: STAT 330, (331 or 371)","","","","",TRUE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,"0.50"
"23","STAT 440","Computational Inference","Category 6","Two","Introduction to and application of computational methods in statistical inference. Monte Carlo evaluation of statistical procedures, exploration of the likelihood function through graphical and optimization techniques. Topics include expectation-maximization, Bootstrapping, Markov Chain Monte Carlo, and other computationally intensive methods. [Offered: W,S]","Prereq: STAT 330, STAT 341","","","","",TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"0.50"
"24","STAT 441","Statistical Learning - Classification","Category 5","One","Classification is the problem of predicting a discrete outcome from a set of explanatory variables. Main topics include logistic regression, neural networks, tree-based methods, support vector machines, and nearest neighbour methods. Other topics include model assessment, training, and tuning. [Offered: F,W]","Prereq: STAT 341; STAT 331 or 371","","","","",TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"0.50"
"25","STAT 441","Statistical Learning - Classification","Category 6","Two","Classification is the problem of predicting a discrete outcome from a set of explanatory variables. Main topics include logistic regression, neural networks, tree-based methods, support vector machines, and nearest neighbour methods. Other topics include model assessment, training, and tuning. [Offered: F,W]","Prereq: STAT 341; STAT 331 or 371","","","","",TRUE,FALSE,FALSE,FALSE,FALSE,FALSE,FALSE,"0.50"
"26","STAT 442","Data Visualization","Category 6","Two","Visualization methods applied to data. Both human perception and statistical properties inform the methods used to display and visually explore categorical, continuous, time-ordered, map, and high dimensional data. Order and layout effects on tables and graphics. Statistical concepts visually presented include variability, densities, quantiles, conditioning, and hypothesis testing. Interactive graphics include linking, brushing, motion, and the navigation of high dimensional spaces guided via projection indices. Glyphs (e.g., cartoon, statistical, or heatmap) and radial and parallel coordinates. [Offered: F,W]","Prereq: STAT 341","","","","",TRUE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,"0.50"
"27","STAT 443","Forecasting","Category 6","Two","Modelling techniques for forecasting time series data: smoothing methods, regression including penalty/regularization methods, the Box-Jenkins framework, stationary and non-stationary processes, both with and without seasonal effects. Other topics may include: ARCH/GARCH models, Bayesian methods, dynamic linear models, Markov Chain Monte Carlo simulation, spectral density analysis, and periodograms. [Offered: F,W,S]","Prereq: STAT 331 or 371 or SYDE 334.","Antireq: STAT 321, 373","","","",TRUE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,"0.50"
"28","STAT 444","Statistical Learning - Advanced Regression","Category 6","Two","This course introduces modern applied regression methods for continuous response modelling, emphasizing both explainability and predictive power. Topics cover a wide selection of advanced methods useful to address the challenges arising from real-world and high-dimensional data; methods include robust regression, nonparametric regression such as smoothing splines, kernels, additive models, tree-based methods, boosting and bagging, and penalized linear regression methods such as the ridge regression, lasso, and their variants. Students will gain an appreciation of the mathematical and statistical concepts underlying the methods and also computational experience in applying the methods to real data. [Offered: W,S]","Prereq: STAT 341; STAT 331 or 371","","","","",TRUE,FALSE,FALSE,TRUE,FALSE,FALSE,FALSE,"0.50"
