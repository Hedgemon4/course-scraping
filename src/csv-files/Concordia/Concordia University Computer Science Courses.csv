"","Course Code","Course Name","Course Description","Credit Amount","Antirequisite","Corequisite","Prerequisite","Lecture","Lab","Tutorial","Reading","Research","Notes"
"1","COMP 108","Computer Science C.Edge Option Reflective Learning I","This course is a reflective learning module for students in their related field which is based on their academic requirements and their first C.Edge term.",3,"","","",TRUE,FALSE,FALSE,FALSE,FALSE,""
"2","COMP 208","Computer Science C.Edge Option Reflective Learning II","This course expands on the students’ second C.Edge term in their related field of study to further develop their knowledge and work‑related skills.",3,"","","The following course must be completed previously: COMP 108",TRUE,FALSE,FALSE,FALSE,FALSE,""
"3","COMP 218","Fundamentals of Programming","Computers and computing: problem solving with computers, basic data types, expressions, assignments, control structures, simple library functions, programmer‑defined functions, arrays of basic types. Basic elements of object‑oriented programming: classes, objects and methods.",3,"Students who have received credit for COMP 248 or COEN 243 may not take this course for credit","","The following course must be completed previously: MATH 201 or equivalent",TRUE,FALSE,TRUE,FALSE,FALSE,"This course may not be taken for credit in the regular undergraduate programs in the Gina Cody School of Engineering and Computer Science "
"4","COMP 228","System Hardware","Levels of system abstraction and von Neumann model. Basics of digital logic design. Data representation and manipulation. Instruction set architecture. Processor internals. Assembly language programming. Memory subsystem and cache management. I/O subsystem. Introduction to network organization and architecture.",3,"Students who have received credit for SOEN 228 may not take this course for credit"," The following courses must be completed previously or concurrently: MATH 203 or Cegep Mathematics 103 or NYA; MATH 204 or Cegep Mathematics 105 or NYC","The following course must be completed previously: COMP 248",TRUE,FALSE,TRUE,FALSE,FALSE,""
"5","COMP 232","Mathematics for Computer Science","Sets. Propositional logic and predicate calculus. Functions and relations. Elements of number theory. Mathematical reasoning. Proof techniques: direct proof, indirect proof, proof by contradiction, proof by induction.",3,"Students who have received credit for COMP 238 or COEN 231 may not take this course for credit","","The following courses must be completed previously: MATH 203 or Cegep Mathematics 103 or NYA; MATH 204 or Cegep Mathematics 105 or NYC",TRUE,FALSE,TRUE,FALSE,FALSE,""
"6","COMP 233","Probability and Statistics for Computer Science","Combinatorics. Axioms of probability. Conditional probability. Discrete and continuous probability distributions. Expectation and moments. Hypothesis testing. Parameter estimation. Correlation and linear regression. Applications to computer science.",3,"Students who have received credit for BIOL 322, ENGR 371, STAT 249, STAT 250, COMM 215, MAST 221, MAST 333 may not take this course for credit","","The following course must be completed previously: MATH 205 or Cegep Mathematics 203 or NYB",TRUE,FALSE,TRUE,FALSE,FALSE,""
"7","COMP 248","Object‑Oriented Programming I","Introduction to programming. Basic data types, variables, expressions, assignments, control flow. Classes, objects, methods. Information hiding, public vs. private visibility, data abstraction and encapsulation. References. Arrays.",3.5,"","The following courses must be completed previously or concurrently: MATH 204 or Cegep Mathematics 105 or NYC","",TRUE,TRUE,TRUE,FALSE,FALSE,""
"8","COMP 249","Object‑Oriented Programming II","Design of classes. Inheritance. Polymorphism. Static and dynamic binding. Abstract classes. Exception handling. File I/O. Recursion. Interfaces and inner classes. Graphical user interfaces. Generics. Collections and iterators.",3.5,""," The following courses must be completed previously or concurrently: MATH 205 or Cegep Mathematics 203 or NYB","The following courses must be completed previously: COMP 248; MATH 203 or Cegep Mathematics 103 or NYA",TRUE,TRUE,TRUE,FALSE,FALSE,""
"9","COMP 326","Computer Architecture","Computer architecture models: control‑flow and data‑flow. Concurrency and locality, data dependency theory. Instruction level parallelism. Instruction scheduling. Pipelined processors. Vector processors. Thread level parallelism. Multiprocessors. Shared memory models. Coherence protocols. Interconnection networks. Performance issues. Advanced topics in contemporary computer architectures.",3,"","","The following course must be completed previously: COMP 346",TRUE,FALSE,TRUE,FALSE,FALSE,""
"10","COMP 333","Data Analytics","This course introduces the process of data analytics with the aid of examples from several disciplines. It covers data wrangling: extract-transform-load (ETL), cleaning, structuring, integration; data analytics activities: description, prescription, modelling, simulation, optimization, storytelling; and the Python ecosystem: language, libraries, and Jupyter environment.",4,"","","The following courses must be completed previously: COMP 233 or ENGR 371; COMP 352; ENCS 282",TRUE,TRUE,FALSE,FALSE,FALSE,""
"11","COMP 335","Introduction to Theoretical Computer Science","Finite state automata and regular languages. Push‑down automata and context‑free languages. Pumping lemmas. Applications to parsing. Turing machines. Undecidability and decidability.",3,"","","The following courses must be completed previously: COMP 232 or COEN 231; and COMP 249 or COEN 244",TRUE,FALSE,TRUE,FALSE,FALSE,""
"12","COMP 339","Combinatorics","General principles of counting, permutations, combinations, identities, partitions, generating functions, Fibonacci numbers, Stirling numbers, Catalan numbers, principle of inclusion‑exclusion. Graphs, subgraphs, isomorphism, Euler graphs, Hamilton paths and cycles, planar graphs, Kuratowski’s Theorem, trees, colouring, 5‑colour theorem, matching, Hall’s theorem.",3,"Students who have received credit for MATH 339 may not take this course for credit","","The following course must be completed previously: COMP 232; or students must complete have completed 18 credits in post‑Cegep Mathematics prior to enrolling",TRUE,FALSE,TRUE,FALSE,FALSE,""
"13","COMP 345","Advanced Program Design with C++","Introduction to C++. I/O with stream classes. Pointers and their uses. The Standard Template Library (STL): containers, algorithms, iterators, adaptors, function objects. Class design: constructors, destructors, operator overloading, inheritance, virtual functions, exception handling, memory management. Advanced topics: libraries, locales, STL conventions, concurrency, template metaprogramming. Applications of C++: systems, engineering, games programming. Project.",4,"","The following course must be completed previously or concurrently: COMP 352","",TRUE,FALSE,TRUE,FALSE,FALSE,""
"14","COMP 346","Operating Systems","Fundamentals of operating system functionalities, design and implementation. Multiprogramming: processes and threads, context switching, queuing models and scheduling. Interprocess communication and synchronization. Principles of concurrency. Synchronization primitives. Deadlock detection and recovery, prevention and avoidance schemes. Memory management. Device management. File systems. Protection models and schemes.",4,"Students who have received credit for COEN 346 may not take this course for credit","","The following courses must be completed previously: COMP 228 or SOEN 228; COMP 352",TRUE,FALSE,FALSE,FALSE,FALSE,""
"15","COMP 348","Principles of Programming Languages","Survey of programming paradigms: Imperative, functional, and logic programming. Issues in the design and implementation of programming languages. Declaration models: binding, visibility, and scope. Type systems, including static and dynamic typing. Parameter passing mechanisms. Hybrid language design.",3,"","The following courses must be completed previously or concurrently: COMP 249","",TRUE,FALSE,TRUE,FALSE,FALSE,""
"16","COMP 352","Data Structures and Algorithms","Abstract data types: stacks and queues, trees, priority queues, dictionaries. Data structures: arrays, linked lists, heaps, hash tables, search trees. Design and analysis of algorithms: asymptotic notation, recursive algorithms, searching and sorting, tree traversal, graph algorithms.",3,"Students who have received credit for COEN 352 may not take this course for credit","The following course must be completed previously or concurrently: COMP 232"," The following courses must be completed previously: COMP 249",TRUE,FALSE,TRUE,FALSE,FALSE,""
"17","COMP 353","Databases","Introduction to database management systems. Conceptual database design: the entity‑relationship model. The relational data model and relational algebra: functional dependencies and normalization. The SQL language and its application in defining, querying, and updating databases; integrity constraints; triggers. Developing database applications. Other data models: Datalog. Object‑oriented data model and ODL. Semi‑structured data. Project.",4,"","","The following courses must be completed previously: COMP 232 or COEN 231; and COMP 352 or COEN 352",TRUE,TRUE,TRUE,FALSE,FALSE,""
"18","COMP 354","Introduction to Software Engineering","Software development process models (e.g. linear vs. iterative). Project management; roles, activities and deliverables for each software life cycle phase. Requirements management: analysis, elicitation, and scope. Architecture, design and the mapping of requirements to design and design to implementation. Traceability. Software quality assurance: verification, validation and the role of testing. Maintenance and evolution. Project.",4,"Students who have received credit for SOEN 341 may not take this course for credit","","The following courses must be completed previously: COMP 352; ENCS 282",TRUE,TRUE,TRUE,FALSE,FALSE," Students in the BEng in Software Engineering program may not take this course for credit "
"19","COMP 361","Elementary Numerical Methods","Vector and matrix norms. Numerical methods for solving linear systems, Gaussian elimination, LU decomposition, error analysis. Numerical solution of nonlinear equations, Newton’s method, fixed point iterations. Interpolation and approximation, Taylor, Lagrange, Chebyshev and Legendre polynomials. Cubic spline interpolation. Numerical differentiation, numerical integration, Gauss quadrature. Discrete least‑squares approximation. Initial value problems in ordinary differential equations, stiff differential equations. Boundary value problems in ordinary differential equations.",3,"Students who have received credit for ENGR 391 or MAST 334 may not take this course for credit","","The following courses must be completed previously: COMP 232, COMP 249",TRUE,FALSE,TRUE,FALSE,FALSE,""
"20","COMP 367","Techniques in Symbolic Computation","Symbolic computation and its use in pure and applied mathematics, in particular in algebra, number theory, cryptography, coding theory, and combinatorics. Programming in a symbolic computing system (e.g. MAPLE).",3,"Students who have received credit for MAST 332 may not take this course for credit","","The following courses must be completed previously: COMP 232 or MAST 217; COMP 248 or MAST 234",TRUE,FALSE,FALSE,FALSE,FALSE,""
"21","COMP 371","Computer Graphics","Introduction to computer graphics and graphics hardware. Introduction to graphics API and graphics systems architecture. Mathematics of 2D and 3D transformations, and 2D and 3D viewing. Colour and basic rendering algorithms. Visual realism and visibility. Illumination and shading, global illumination techniques, and textures. Introduction to curves and surfaces, and 3D object modelling. Introduction to computer animation. Project.",4,"","","The following courses must be completed previously: COMP 232 or COEN 231; COMP 352 or COEN 352",TRUE,TRUE,FALSE,FALSE,FALSE,""
"22","COMP 376","Introduction to Game Development","Introduction to design and implementation aspects of computer gaming: basic game design, storytelling and narratives, and game genres. Virtual environments, 2D and 3D game engines, and game development tools. Character development, gameplay strategies, level design in games, and user interfaces. Architecture of game consoles, analog and digital controllers, and the incorporation of graphics, sound, and music in game implementations. Project.",4,"","","The following courses must be completed previously: COMP 371",TRUE,TRUE,FALSE,FALSE,FALSE,""
"23","COMP 425","Computer Vision","This course introduces basic techniques and concepts in computer vision including image formation, grouping and fitting, geometric vision, recognition, perceptual organization, and the state‑of‑the art software tools. Students learn fundamental algorithms and techniques, and gain experience in programming vision‑based components; in particular, how to program in OpenCV, a powerful software interface used to process data captured from passive and active sensors. A project is required.",4,"Students who have received credit for this topic under a COMP 498 or COMP 499 number may not take this course for credit","","",FALSE,TRUE,FALSE,FALSE,FALSE,""
"24","COMP 426","Multicore Programming","Fundamental concepts of computer architecture. Architecture of the selected multicore platform. Review of shared‑memory parallel programming. The difficulties inherent to parallel programming. Scalability of programming models. The stream programming model for multicore. Implicit and explicit threading. Implicit and explicit orchestration of data movement, both on chip and off. Adapting standard algorithms to multicore. Critical assessment of the available system‑software support. Project.",4,"","","The following courses must be completed previously: COMP 346 or COEN 346",TRUE,TRUE,FALSE,FALSE,FALSE,""
"25","COMP 428","Parallel Programming","Parallel programming techniques as a natural extension to sequential programming. Overview of parallel programming architectures and models. Parallel programming issues: locality, granularity, scheduling, data decomposition and distribution, load balancing, communication and synchronization, determinacy and non‑determinacy, cost and performance. Techniques and tools for message‑passing parallel programming. Case studies. Project.",4,"","","The following courses must be completed previously: COMP 346 or COEN 346",TRUE,TRUE,TRUE,FALSE,FALSE,""
"26","COMP 432","Machine Learning","This course introduces conceptual and practical aspects of machine learning. Concepts include regression, classification, maximum likelihood estimation, discriminative vs. generative modelling, generalization, supervised learning, unsupervised learning, semi-supervised learning and transfer learning. Methods include linear models, mixture models, nearest neighbours, support vector machines, random forests, boosting, and basics of deep learning. A project is required.",4,"","","The following course must be completed previously: COMP 352",TRUE,TRUE,FALSE,FALSE,FALSE,""
"27","COMP 433","Introduction to Deep Learning","",4,"","","The following course must be completed previously: COMP 352",TRUE,TRUE,FALSE,FALSE,FALSE,""
"28","COMP 438","Geometric Modelling and Processing","",4,"","","The following course must be completed previously: COMP 352",TRUE,TRUE,FALSE,FALSE,FALSE,""
"29","COMP 442","Compiler Design","Compiler organization and implementation: lexical analysis and parsing, syntax‑directed translation, code optimization. Run‑time systems. Project.",4,"","","The following courses must be completed previously: COMP 228 or SOEN 228 or COEN 311; COMP 335; COMP 352 or COEN 352",TRUE,TRUE,FALSE,FALSE,FALSE,""
"30","COMP 444","System Software Design","Detailed examination of the design, implementation and system call interface of a contemporary operating system: its kernel, file system, process and thread management including scheduling, file system design and implementation, memory management, device management, I/O management, interprocess communication and synchronization mechanisms, system call interface, interrupt handling, and other advanced issues. Project.",4,"","","The following courses must be completed previously: COMP 346",TRUE,TRUE,FALSE,FALSE,FALSE,""
"31","COMP 445","Data Communication and Computer Networks","Network architectures: OSI and Internet models. Link layer: error detection, multiple access protocols, addressing. Local area networks: Ethernet, ATM, switches and hubs. Network layer: forwarding and routing, IP, routing algorithms, multicast. Transport layer: connectionless and connection‑oriented transport, reliable data transport, congestion control, QoS, UDP and TCP. Application layer: DNS, the web and http, file transfer, and email. Introduction to network security, multimedia protocols and wireless networking.",4,"","","The following courses must be completed previously: COMP 346",TRUE,TRUE,FALSE,FALSE,FALSE,""
"32","COMP 451","Database Design","Storage management. Buffer management. Data organization. Index structures. Query optimization and execution. Transaction management. Recovery. Concurrency control. Database performance analysis and tuning. New trends in database technology. Project.",4,"","","The following courses must be completed previously: COMP 353",TRUE,TRUE,FALSE,FALSE,FALSE,""
"33","COMP 465","Design and Analysis of Algorithms","Order statistics: worst‑case, average‑case and amortized analysis. Algorithm design techniques: greedy algorithms, dynamic programming. Selected algorithms from graph theory, linear programming, number theory, string matching, and computational geometry. A survey of hard problems, NP‑completeness, and approximation algorithms.",3,"","","The following courses must be completed previously: COMP 232 or COEN 231; COMP 339; COMP 352 or COEN 352",TRUE,FALSE,FALSE,FALSE,FALSE,""
"34","COMP 472","Artificial Intelligence","This course initially describes the scope and history of Artificial Intelligence. Then it covers knowledge representation, heuristic search, game playing and planning. Finally, it introduces the topics of machine learning, genetic algorithms and natural language processing. A project is required.",4,"","","The following course must be completed previously: COMP 352 or COEN 352",TRUE,TRUE,FALSE,FALSE,FALSE,""
"35","COMP 473","Pattern Recognition","Preprocessing. Feature extraction and selection. Similarity between patterns and distance measurements. Syntactic and statistical approaches. Clustering analysis. Bayesian decision theory and discriminant functions. Neural networks and machine learning. Applications. Project.",4,"","","The following courses must be completed previously: COMP 352",TRUE,TRUE,FALSE,FALSE,FALSE,""
"36","COMP 474","Intelligent Systems","Rule‑based expert systems, blackboard architecture, and agent‑based. Knowledge acquisition and representation. Uncertainty and conflict resolution. Reasoning and explanation. Design of intelligent systems. Project.",4,"","","The following course must be completed previously: COMP 352 or COEN 352",TRUE,TRUE,FALSE,FALSE,FALSE,""
"37","COMP 475","Immersive Technologies","This course covers the fundamentals of immersive technologies, a brief history and overview of immersive technologies, analyzes case studies of interactive experiences using immersive technologies, and identifies the main challenges of the current state of the art. Furthermore, it covers the basic principles of 3D graphics for creating virtual assets and environments, and basic concepts and technologies for interaction. A project provides hands‑on experience in the design and development of interactive experiences with the user of immersive technologies.",4,"","","The following course must be completed previously: COMP 371",TRUE,FALSE,FALSE,FALSE,FALSE,""
"38","COMP 476","Advanced Game Development","Introduction to advanced aspects of computer games. Game engine design. Artificial Intelligence (AI): non‑player character movement, coordinated movement, pathfinding, world representations; decision making; tactical AI, strategic AI, learning in games. Physics‑based techniques: collision detection and response. Networked gaming: multi‑player games, networking and distributed game design, mobile gaming. Improving realism: cut scenes, 3D sound. Project.",4,"","","The following course must be completed previously: COMP 361 or ENGR 391; COMP 376",TRUE,TRUE,FALSE,FALSE,FALSE,""
"39","COMP 477","Animation for Computer Games","Introduction to the algorithms, data structures, and techniques used in modelling and rendering dynamic scenes. Topics include principles of traditional animation, production pipeline, animation hardware and software, orientation representation and interpolation, modelling physical and articulated objects, forward and inverse kinematics, motion control and capture, key‑frame, procedural, and behavioural animation, camera animation, scripting system, and free‑form deformation. Project.",4,"","","The following courses must be completed previously: COMP 361 or ENGR 391, COMP 371",TRUE,TRUE,FALSE,FALSE,FALSE,""
"40","COMP 478","Image Processing","Digital image fundamentals, image transforms (Fourier, Walsh, Haar, Hotelling, wavelet), image enhancement (histogram processing, spatial filtering, high‑ and low‑pass filtering), image restoration, image compression (elements of information theory, image compression models, error‑free compression, lossy compression, image compression standards), image segmentation (line detection, Hough transform, edge detection and linking, thresholding, region splitting and merging), representation and description (chain codes, signatures, skeletons, shape descriptors, moments, texture). Project.",4,"","","The following courses must be completed previously: COMP 352",TRUE,TRUE,FALSE,FALSE,FALSE,""
"41","COMP 479","Information Retrieval and Web Search","Basics of information retrieval (IR): boolean, vector space and probabilistic models. Tokenization and creation of inverted files. Weighting schemes. Evaluation of IR systems: precision, recall, F‑measure. Relevance feedback and query expansion. Application of IR to web search engines: XML, link analysis, PageRank algorithm. Text categorization and clustering techniques as used in spam filtering. Project.",4,"","","The following courses must be completed previously: COMP 233 or ENGR 371; COMP 352",TRUE,TRUE,FALSE,FALSE,FALSE,""
"42","COMP 490","Computer Science Project I","Students work on a computer science project under the supervision of a faculty member and submit a suitable written report on the work carried out.",3,"","","The following courses must be completed previously: ENCS 282",TRUE,FALSE,FALSE,FALSE,FALSE,"Students can register for COMP 490 by itself or, with the permission of the Department, students can register for COMP 490 and 492 concurrently and carry out a major project "
"43","COMP 492","Computer Science Project II","Students work on a computer science project under the supervision of a faculty member and submit a suitable written report on the work carried out.",3,"","The following courses must be completed previously or concurrently: COMP 490","",TRUE,FALSE,FALSE,FALSE,FALSE,"Students can register for COMP 492 by itself or, with the permission of the Department, students can register for COMP 490 and COMP 492 concurrently and carry out a major project "
"44","COMP 493","Computational Biology Team Project","Students form teams or join existing teams (such as those in research labs) and work under faculty supervision to solve a computational biology research problem or to carry out a computational biology research project. The research problem or project involves the utilization of knowledge of biology and of computing, involves computing lab and/or wet lab practice and contributes to any of the areas of computational biology. The project fosters teamwork and allows students to develop their project management, technical writing and oral presentation skills.",6,"Students who have received credit for BIOL 493 may not take this course for credit","","The following courses must be completed previously: BIOL 367; COMP 352",FALSE,FALSE,FALSE,FALSE,TRUE,""
"45","COMP 495","Topics in Computer Science","This course may be offered in a given year upon the authorization of the Department. The content may vary from offering to offering and will be chosen to complement the available elective courses.",3,"","","The following courses must be completed previously: ENCS 282",FALSE,FALSE,FALSE,FALSE,FALSE,""
"46","COMP 498","Topics in Computer Science","This course may be offered in a given year upon the authorization of the Department. The content may vary from offering to offering and will be chosen to complement the available elective courses.",3,"","","",TRUE,FALSE,FALSE,FALSE,FALSE,""
"47","COMP 499","Topics in Computer Science with Lab","The content may vary from offering to offering and will be chosen to complement the available elective courses.",4,"","","",TRUE,TRUE,FALSE,FALSE,FALSE,""
"48","SOEN 228","System Hardware","This course covers the following topics: Boolean Algebra, Digital logic and the design of logic circuits; CPU design; addressing modes; instruction sets and sequencing; design of datapath and control units; memory systems and types; cache memory levels; I/O devices and their interconnection to the CPU; assembly language, and Interrupts.",4,"Students who have received credit for COMP 228 may not take this course for credit","","The following courses must be completed previously: MATH 203 or Cegep Mathematics 103, MATH 204 or Cegep Mathematics 105",TRUE,TRUE,TRUE,FALSE,FALSE,""
"49","SOEN 287","Web Programming","This course covers the following topics: internet architecture and protocols; web applications through clients and servers; modern HTML and CSS; client‑side programming using modern JavaScript and an overview of the advantages of some common modern JavaScript libraries; Regular Expressions; static website contents and dynamic page generation through server‑side programming; preserving state (client‑side) in web applications; deploying static and dynamic websites and content management systems vs. website deployment.",3,"","","The following course must be completed previously: COMP 248",TRUE,FALSE,TRUE,FALSE,FALSE,""
"50","SOEN 298","System Hardware Lab","Digital design exercises including assembly and testing corresponding to the SOEN 228 lab.",1,"","","",FALSE,TRUE,FALSE,FALSE,FALSE,""
"51","SOEN 321","Information Systems Security","This course covers the following topics: introduction to cryptography and cryptanalysis; threats, attacks, and vulnerabilities; security services (confidentiality, authentication, integrity); public key systems including Diffie‑Hellman, RSA, Rabin; Digital Signature Schemes; Hash functions and MAC schemes; authentication protocols; network layers and security; protocols; Public Key Infrastructure (PKI); Transport Layer Security (TLS); firewalls; Intrusion Detection Systems; DNS security; Denial of Service Attacks; Penetration testing; Online Privacy and anonymity; Mix networks and Onion Routing; TOR; Malware; Botnets; Spam and Hot topics in Security and Privacy.",3,"","","The following course must be completed previously: COMP 346 or COEN 346",TRUE,FALSE,TRUE,FALSE,FALSE,""
"52","SOEN 331","Formal Methods for Software Engineering","This course covers the following topics: property‑based (axiomatic and algebraic) formalisms and model‑based (abstract and visual) formalisms; axiomatic formalisms with temporal logic, assertions and contracts; algebraic formalisms through algebraic specifications; abstract formalisms through the Z and Object‑Z specification languages; visual formalisms through automata (finite state machines and extended finite state machines).",3,"","","The following courses must be completed previously: COMP 232, COMP 249",TRUE,FALSE,TRUE,FALSE,FALSE,""
"53","SOEN 341","Software Process and Practices","This course covers the following topics: basic principles of software engineering; introduction to software process, including activities, phases, organization, roles, teamwork, and conflict resolution; notations used in software engineering; software development practices, including documentation, modern version control, review, testing, agile, and continuous integration.",3,"Students who have received credit for COMP 354 may not take this course for credit","The following courses must be completed previously or concurrently: COMP 352 or COEN 352; ENCS 282","",TRUE,FALSE,TRUE,FALSE,FALSE,""
"54","SOEN 342","Software Requirements and Deployment","This course covers the following topics: requirements engineering; eliciting and coping with changing and evolving requirements; deployment of a software system under real‑life functional and non‑functional requirements scenarios; understanding how requirements impact early‑stage and deployed software systems through all phases of engineering, including design, implementation, test and verification, deployment, and evolution. A project is required.",3,"","","The following course must be completed previously: SOEN 341",TRUE,FALSE,TRUE,FALSE,FALSE,""
"55","SOEN 343","Software Architecture and Design","This course covers the following topics: from requirements to design to implementation; planned vs. evolutionary design and refactoring; model‑driven design and Unified Modelling Language (UML); structural and behavioural design descriptions and specifications; general and domain‑specific design principles, patterns and idioms; introduction to software architecture (styles and view models); design quality; architectural debt; design smells; refactoring Anti‑Patterns to Patterns; design rationale.",3,"","The following courses must be completed previously or concurrently: SOEN 341; SOEN 342","",TRUE,FALSE,TRUE,FALSE,FALSE,""
"56","SOEN 344","Advanced Software Architecture and Design","This course covers the following topics: architectural activities, roles, and deliverables; architectural view models; architectural styles (including client‑server, layered, pipes‑and‑filters, event‑based, process control) and frameworks; architectural analysis and the interplay with requirements elicitation; notations for expressing architectural designs, structural and behavioural specifications; from architectural design to detailed design; domain specific architectures and design patterns; evaluation and performance estimation of designs; advanced object‑oriented design patterns and idioms.",3,"","","The following course must be completed previously: SOEN 343",TRUE,FALSE,TRUE,FALSE,FALSE,""
"57","SOEN 345","Software Testing, Verification and Quality Assurance","This course covers the following topics: unit testing and test‑driven development; characterization testing and legacy system testing; mocking, dependency injection, and breaking system dependencies; integration and system testing; test planning and management; test order, prioritization, redundancy, and flaky tests; advanced topics including static analysis, bisection, and fuzzing; data migration testing and verification; continuous integration and delivery; DevOps testing and validation including darklaunching, A/B testing, feature toggles, and logging.",3,"","The following courses must be completed previously or concurrently: SOEN 343","",TRUE,FALSE,TRUE,FALSE,FALSE,""
"58","SOEN 357","User Interface Design","",3,"","","The following course must be completed previously: SOEN 341 or COMP 354",TRUE,FALSE,TRUE,FALSE,FALSE,""
"59","SOEN 363","Data Systems for Software Engineers","This course covers the following topics: introduction to the current data ecosystem; relational databases; key‑value databases; document databases; column databases; graph databases; RDF stores; parallel and distributed file systems, data processing engines; data stream analytics; and data infrastructure.",3,"","","The following course must be completed previously: COMP 352",TRUE,FALSE,TRUE,FALSE,FALSE,""
"60","SOEN 384","Management, Measurement and Quality Control","Organization of large software development. Roles of team members, leaders, managers, stakeholders, and users. Tools for monitoring and controlling a schedule. Financial, organizational, human, and computational resources allocation and control. Project and quality reviews, inspections, and walkthroughs. Risk management. Communication and collaboration. Cause and effects of project failure. Project management via the Internet. Quality assurance and control.",3,"","","The following courses must be completed previously: ENCS 282; SOEN 341",TRUE,FALSE,TRUE,FALSE,FALSE,""
"61","SOEN 385","Control Systems and Applications","Mathematical modelling of dynamical systems; block diagrams; feedback; open and closed loops. Linear differential equations; time domain analysis; free, forced, and total response; steady state and transient response. Laplace transform and inverse transform; second order systems. Transfer functions and stability. Control system design: PID and root locus techniques. Computer simulation of control systems. Applications.",3,"","","The following courses must be completed previously: ENGR 213, ENGR 233",TRUE,FALSE,TRUE,FALSE,FALSE,""
"62","SOEN 387","Web‑Based Enterprise Application Design","This course introduces Hypertext Transfer Protocol (HTTP), and client/server and layered architectures for Web-based Enterprise Applications (WEA). The course covers Application, Presentation, Domain and Data Source design patterns. Students learn how to use Java servlets and Java Server Pages. The course also covers authentication, security and transaction processing, as well as system-level testing of web applications.",3,"","The following course must be completed previously or concurrently: COMP 353 or SOEN 363"," The following course must be completed previously: COMP 354 or SOEN 341; SOEN 287",TRUE,FALSE,TRUE,FALSE,FALSE,""
"63","SOEN 390","Software Engineering Team Design Project","Students work in teams to design and implement a software project from requirements provided by the coordinator. Each team will demonstrate the software and the testing of the software, and prepare adequate documentation for it. In addition, each team will generate a report based on the process of development.",3.5,"","The following courses must be completed previously or concurrently: SOEN 345 and SOEN 357","",TRUE,TRUE,TRUE,FALSE,FALSE,""
"64","SOEN 422","Embedded Systems and Software","This course covers the following topics: embedded computer system architectures; programming of interface and peripheral control registers; analog to digital conversion and motor control using pulse width modulation; interrupts, communication methods and their application to interface control and multi‑computer systems; architecture and operating systems of advanced embedded designs; design and testing of integrated systems; advanced topics.",4,"Students who have received credit for COEN 421 may not take this course for credit","","The following course must be completed previously: COMP 346",TRUE,TRUE,TRUE,FALSE,FALSE,""
"65","SOEN 423","Distributed Systems","This course covers the following topics: principles of distributed computing including scalability, transparency, concurrency, consistency, fault tolerance, high availability; client‑server interaction technologies including interprocess communication, sockets, group communication, remote procedure call, remote method invocation, object request broker, web services; server design techniques including process replication, fault tolerance through passive replication, high availability through active replication, coordination and agreement, transactions and concurrency control.",4,"","","",TRUE,TRUE,TRUE,FALSE,FALSE,""
"66","SOEN 448","Management of Evolving Systems","This course covers the following topics: software maintenance (corrective, perfective, and adaptive); software reuse; construction of reusable software; techniques for reverse engineering and re‑engineering software; software development as “growing” software; long‑term evolution of existing software systems.",3,"","","",TRUE,FALSE,FALSE,FALSE,FALSE,""
"67","SOEN 471","Big Data Analytics","This course focuses on the fundamentals of the big data terminology, concepts and technologies. For the technical aspects of big data management systems, the course focuses on big data engines, programming models and file systems. Specific techniques covered include supervised classification, recommender systems, data clustering, frequent itemsets mining, similarity search, data streams and graph analysis. A project provides extensive hands-on experience.",4,"","","",TRUE,TRUE,FALSE,FALSE,FALSE,""
"68","SOEN 487","Web Services and Applications","This course covers the following topics: analysis and design of web services and applications; advanced architectures for the design, deployment, and testing of large multi‑server web services and applications; Service Oriented Architecture (SOA); Electronic Commerce; security; load balancing; stress testing.",4,"","","",TRUE,TRUE,TRUE,FALSE,FALSE,""
"69","SOEN 490","Capstone Software Engineering Design Project","Students work in teams of at least four members to construct a significant software application. The class meets at regular intervals. Team members will give a presentation of their contribution to the project.",4,"","","The following courses must be completed previously: SOEN 390",TRUE,TRUE,FALSE,FALSE,FALSE,""
"70","SOEN 491","Software Engineering Project","Theoretical or practical project in an advanced topic in software engineering.",1,"","","",TRUE,FALSE,FALSE,FALSE,FALSE,""
"71","SOEN 498","Topics in Software Engineering","This course may be offered in a given year upon the authorization of the Department. The content may vary from offering to offering and will be chosen to complement the available elective courses.",3,"","","",TRUE,FALSE,FALSE,FALSE,FALSE,""
"72","SOEN 499","Topics in Software Engineering with Lab","This course may be offered in a given year upon the authorization of the Department. The content may vary from offering to offering and will be chosen to complement the available elective courses.",4,"","","",TRUE,TRUE,FALSE,FALSE,FALSE,""
